# docker-compose.yml
services:
  # -------------------------------------------
  # LLM Host: AnythingLLM
  # -------------------------------------------
  anythingllm:
    image: mintplexlabs/anythingllm:latest # Use the official image
    container_name: anythingllm
    ports:
      - "3001:3001" # Default AnythingLLM port
    volumes:
      - ./anythingllm/storage:/app/server/storage # Persist AnythingLLM data (configs, vector cache, etc.)
      - ./anythingllm/collector/hotdir:/app/collector/hotdir
      - ./anythingllm/collector/output:/app/collector/output
    environment:
      # --- Core Settings ---
      COMMUNITY_HUB_BUNDLE_DOWNLOADS_ENABLED: "1"
    restart: unless-stopped
    networks:
      - ai_network

  # -------------------------------------------
  # Workflow Automation: n8n
  # -------------------------------------------
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    # Re-expose port for direct access (needed for cloudflared)
    ports:
      - "5678:5678"
    volumes:
      - n8n-data:/home/node/.n8n # Persist n8n data
    environment:
      # Set a timezone, e.g., America/New_York. Adjust as needed.
      # Find yours: https://momentjs.com/timezone/
      GENERIC_TIMEZONE: "${GENERIC_TIMEZONE:-America/New_York}" # Use from .env, default if not set
      # Set webhook URL for cloudflared (will be added to .env.template)
      WEBHOOK_URL: "https://${N8N_PUBLIC_HOSTNAME?Public hostname not set in .env}/"
    restart: unless-stopped
    networks:
      # Connect to ai_network to talk to other AI services if needed
      - ai_network

  # -------------------------------------------
  # Headless Browser: Browserless
  # -------------------------------------------
  browserless:
    image: browserless/chrome:latest
    container_name: browserless
    ports:
      - "3100:3000" # Default Browserless port
    environment:
      # Default to allowing 10 concurrent sessions
      MAX_CONCURRENT_SESSIONS: 10
      # Disable connection timeout by default
      CONNECTION_TIMEOUT: -1
      # !! IMPORTANT: Change this default token !!
      # TOKEN: your-secure-token
      TOKEN: "${BROWSERLESS_TOKEN?Browserless token not set in .env}" # Require from .env
      # Disable the debugger for security
      ENABLE_DEBUGGER: "false"
    restart: unless-stopped
    networks:
      - ai_network

  # -------------------------------------------
  # Cloudflare Tunnel Connector
  # -------------------------------------------
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    networks:
      - ai_network
    environment:
      # Tunnel token obtained from Cloudflare Zero Trust dashboard
      # If this is empty, the container will start but the tunnel will not connect.
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    # Run the tunnel using the token
    command: tunnel --no-autoupdate run
    # Note: Ingress rules are configured in the Cloudflare dashboard for token-based tunnels

# Removed Caddy and Tailscale services

# -------------------------------------------
# Volumes (for data persistence)
# -------------------------------------------
volumes:
  anythingllm-storage:
  anythingllm-collector:
  n8n-data:               # For n8n data
  # Removed caddy volumes

# -------------------------------------------
# Network (allows containers to talk via service names)
# -------------------------------------------
networks:
  ai_network:             # Existing network for AI services
    driver: bridge
  # Removed internal and caddy networks
